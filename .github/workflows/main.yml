# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:

  docker-build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/ocap2/web:latest

  windows-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Install cross compile dependencies
        run: sudo apt-get install -y gcc-mingw-w64 gcc-multilib

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'

      - name: Build windows binary
        run: CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++ GOOS=windows GOARCH=amd64 go build -o ocap-webserver.exe ./cmd/

      - name: Upload windows binary
        uses: actions/upload-artifact@v2
        with:
          name: webserver
          path: ocap-webserver.exe
